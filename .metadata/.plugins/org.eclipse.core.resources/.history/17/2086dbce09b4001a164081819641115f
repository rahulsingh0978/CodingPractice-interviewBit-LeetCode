package leetcode;

public class MnotoneIncreasingDigit {
	public int monotoneIncreasingDigits(int N) {
		char[] s = String.valueOf(N).toCharArray();
		int n = s.length;
		int j=0;
		for(int i=0;i<n-1;i++) {
			if(s.charAt(i)==s.charAt(i+1)) {
				continue;
			}
			
		}
		
	}
	public int monotoneIncreasingDigits123(int N) {
        String s = N+"";
        int n=s.length();
        StringBuilder sb = new StringBuilder();
        int i =0;
        for(int j=0;j<n ;){
            if(Integer.parseInt(s.charAt(n-1)+"") < Integer.parseInt(s.charAt(j)+"") ){
                //if(Integer.parseInt(s.charAt(n-1)+"")==0)
                    sb.append((Integer.parseInt(s.charAt(j)+"")-1)+"");
                
                j++;
                while(j<n){
                    sb.append("9") ;
                    j++;
                    }
                     break;
            }
            else if(j!=(n-1) && Integer.parseInt(s.charAt(n-1)+"") == Integer.parseInt(s.charAt(j)+"") ) {
            	//check for all the digits
            	int digit = Integer.parseInt(s.charAt(n-1)+"");
            	int first = digit -1;
            	int k=1;
            	boolean flag=true;
            	while(k<n-1) {
            		if(Integer.parseInt(s.charAt(k)+"")!=digit) {
            			flag=false;
            			break;
            		}
            		k++;
            	}
            	if(flag) {
            		sb.append(s.substring(j,n));
            		break;
            	}else {
            		int m=1;
            		sb.append(first+"");
            		while(m<n) {
            			sb.append("9");
            			m++;
            		}
            		break;
            		
            	}
            }else {
            sb.append(s.charAt(j));
                     j++;
            }
        }
       return Integer.parseInt(sb.toString()) ;
    }
	public static void main(String[] args) {
		MnotoneIncreasingDigit obj = new MnotoneIncreasingDigit();
		int s = 1234;
		System.out.println(obj.monotoneIncreasingDigits(s));
	}
}
