package interviewBits;

public class gridPath {
	public int uniquePathsWithObstacles(int[][] A) {
		int r = A.length;
		if (r == 0) {
			return r;
		}
		int c = A[0].length;
		if (A[0][0] == 1 || A[r - 1][c - 1] == 1) {
			return 0;
		}
		int[][] lookup = new int[r][c];
		for (int i = 0; i < r; i++) {
			if (A[i][0] != 1)
				lookup[i][0] = 1;
		}
		for (int j = 1; j < c; j++) {
			if (A[0][j] != 1)
				lookup[0][j] = 1;
		}
		for (int i = 1; i < r; i++) {
			for (int j = 1; j < c; j++) {
				if (A[i][j] == 0) {
					lookup[i][j] = lookup[i - 1][j] + lookup[i][j - 1];
				} else {
					lookup[i][j] = 0;
				}
			}
		}
		return lookup[r - 1][c - 1];
	}

	public static void main(String[] args) {
		int[][] A = { { 0, 0 }, { 0, 0 }, { 0, 0 }, { 1, 0 }, { 0, 0 } };

		gridPath obj = new gridPath();
		System.out.println(obj.uniquePathsWithObstacles(A));
	}
}