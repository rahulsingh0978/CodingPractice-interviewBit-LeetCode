package interviewBits;

import java.util.HashMap;
import java.util.Map;

public class WindoMinSubString {
	public String minWindow(String A, String B) {
		int s = 0;
		int e = 0;
		int n = A.length();
		int bn = B.length();
		Map<Character, Integer> count = new HashMap<>();
		for (int i = 0; i < B.length(); i++) {
			if (count.containsKey(B.charAt(i))) {
				count.put(B.charAt(i), count.get(B.charAt(i)) + 1);
			}
			count.put(B.charAt(i), 1);
		}
		Map<Character, Integer> temp = new HashMap<>();
		while (s < e && e < n) {
			if (e - s >= bn) {
				for (Map.Entry<Character, Integer> map : count.entrySet()) {

				}
			} else if (count.containsKey(A.charAt(e))) {
				if (temp.containsKey(A.charAt(e))) {
					temp.put(A.charAt(e), count.get(B.charAt(e)) + 1);
				}
				temp.put(A.charAt(e), 1);
				e++;
			}
			
		}

		return A.substring(s, e + 1);
	}
	public static void main(String[] args) {
		Map<Character, Integer> temp = new HashMap<>();
		temp.put('a',1);
		Map<Character, Integer> temp2 = new HashMap<>();
		temp2.put('a',1);
		System.out.println(temp.equals(temp2));
	}
}
