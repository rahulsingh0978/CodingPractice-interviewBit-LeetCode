package leetcode;

import java.util.Stack;

public class MaxParenthesis {
	public static int longestValidParentheses(String A) {
		int n = A.length();
		int ans = 0; // store result
		Stack<Integer> stack = new Stack<>();
		if (n < 2) {
			return -1;
		} else {
			for (int i = 0; i < n - 1; i++) {
				// ( will push in stack
				if (A.charAt(i) == '(') {
					stack.push(i);
				} else {
					if (!stack.isEmpty()) {
						ans = Math.max(ans, i - stack.peek() + 1);
						stack.pop();
					}
				}

			}

		}
		return ans;
	}
	public static void main(String[] args) {
		System.out.println(longestValidParentheses("))()"));
	}

}
